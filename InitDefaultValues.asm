
;Устанавливаем стартовые значения переменных
; Таймеры задач
; Значения мьютексов входных буферов
; регистры состояния задач 
; R16 - номер текущей задачи

LDI R16, MAXPROCNUM
STS currentTaskNumber , R16

LDI R16, MAXPROCNUM-1 ; Сначала установим адрес последней задачи
LDI R17, FRAMESIZE
MUL R16, R17		   ; вычислили относительное смещение. отностительно начала области памяти для хранения контекстов 7*8 = 560 байт 
					   ; это начало контекста последней задачи.  
LDI XL, low(TaskFrame)
LDI XH, high(TaskFrame)
ADD XL, R0				; Прибавили к отностительному смещению абсолютное TaskFrame это метка указывающаяя на область памяты выделеную под контекст.
ADC XH, R1
;  В регистровой паре X  лежит адрес контекста задачи последней задачи. По умолчанию у нас их 8 (0,1,2,3,4,5,6,7)

LDI R16 , MAXPROCNUM
CLR R17                       

Init_task_next:
    DEC R16
    BRBS 2, Init_task_end ; Если все задачи проинициализированы то выходим
    
    
	;LDI R17, 128 ; REMOVE AFTER DEBUG
	ST X+, R17 ; Очистили регистр состояния задачи и сдвинулись вперед на 1 байт
	;CLR R17 ; REMOVE

    LDI  ZL,  low(DefaultTimer*2) ; Загружаем адрес где хранятся таймеры задач 
    LDI  ZH, high(DefaultTimer*2) 

    MOV  R18, R16 ; вычисляю смещение до адреса с дефолтным таймером текущей задачи
    LSL  R18	  ; умножаю  номер задачи на два для перевода из слов в байты 

    ADD ZL, R18   ; смещаюсь на адрес с дефолтным таймером текущей задачи
    CLR R18
	ADC ZH, R18   ; прибавляю 0+перенос если он появился 
	
	NOP
	NOP
	NOP
	
	LPM  R18, Z ; Загрузили дефолтное значение таймера в R18 он больше не нужен

    ST   X+, R18 ; младший байт, пишем дефолтное значение
    CLR R18
	ST   X+, R18 ; очищаем три старших байта таймера и записываем дефолтное значение в младший
    ST   X+, R18
    ST   X,  R18 ; итого сместилист на 4 ьайта вперед и адрес указывает на 5 байт ( 

    SUBI XL, low(-6)  ; Дополнительно смещаемся еще на 6 байт, на входной буфер задачи 
	SBCI XH, high(-6) ; его индекс смещения = 10 (11й байт во фрейме) 
    ST X, R16
    
    SUBI XL, low(10+FRAMESIZE) ; прыгаем на начало фрейма и еще на 80(фрейм) байт назад.  
    SBCI XH, high(10+FRAMESIZE) ; при инициализации дошли аж до 

	;SUBI XL, low(10)
	;SBCI XH, high(10)
    
	RJMP Init_task_next

Init_task_end:
	; --------------------------------------------
	; Init kernel stack for Task Loader first run
	; ============================================
    LDI R16 , kernelInitMode	
	STS contextType, R16			; set kernel mode by default. 2 Special value mean "first time". 1=KernelMode 0=TaskMode 2=kernelInitMode
	
	NOP
	NOP
	NOP

			
	SEI
